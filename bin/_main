#!/usr/bin/env bash
# vim: autoindent tabstop=4 shiftwidth=4 expandtab softtabstop=4 filetype=bash
# -*- mode: sh; indent-tabs-mode: nil; sh-basic-offset: 4 -*-

CRUCIBLE_HOME="${1}"
shift
LOG_DB="${1}"
shift

if [ -z "${CRUCIBLE_HOME}" -o ! -e "${CRUCIBLE_HOME}" ]; then
    echo "ERROR: Could not find \${CRUCIBLE_HOME} [${CRUCIBLE_HOME}], exiting."
    exit 1
fi

if [ -z "${LOG_DB}" -o ! -e "${LOG_DB}" ]; then
    echo "ERROR: Could not find \${LOG_DB} [${LOG_DB}], exiting."
    exit 2
fi

. /etc/sysconfig/crucible
. $CRUCIBLE_HOME/bin/base

if [ "${1}" == "log" ]; then
    shift
    ${CRUCIBLE_HOME}/bin/log ${1} ${LOG_DB}
    RET_VAL=$?
elif [ "${1}" == "repo" ]; then
    shift
    if [ -z "${1}" ]; then
        ${CRUCIBLE_HOME}/bin/repo status
        RET_VAL=$?
    else
        ${CRUCIBLE_HOME}/bin/repo "$@"
        RET_VAL=$?
    fi
elif [ "${1}" == "update" ]; then
    shift
    if [ -z "${1}" ]; then
        ${CRUCIBLE_HOME}/bin/update all
        RET_VAL=$?
    else
        ${CRUCIBLE_HOME}/bin/update ${1}
        RET_VAL=$?
    fi
elif [ "${1}" == "workshop" ]; then
    shift
    ${CRUCIBLE_HOME}/subprojects/core/workshop/workshop.pl "$@"
    RET_VAL=$?
elif [ "${1}" == "gen-iterations" ]; then
    shift
    benchmark=${1}
    shift
    "${CRUCIBLE_HOME}"/subprojects/core/multiplex/multiplex \
        "${CRUCIBLE_HOME}/subprojects/benchmarks/$benchmark/multiplex.json" "$@"
    RET_VAL=$?
elif [ "${1}" == "run" ]; then
    shift
    benchmark=${1}
    base_run_dir="/var/lib/crucible/$benchmark-$datetime"
    shift
    export RS_NAME="$CRUCIBLE_NAME"
    export RS_EMAIL="$CRUCIBLE_EMAIL"
    export RS_REG_REPO="$CRUCIBLE_CLIENT_SERVER_REPO"
    export RS_REG_AUTH="$CRUCIBLE_CLIENT_SERVER_AUTH"
    container_run_opts="-i --name crucible-run"
    container_redis_opts="-d --name crucible-redis\
        --mount=type=bind,source=$CRUCIBLE_HOME/config/redis.conf,destination=/etc/redis.conf"
    container_run_cmd="podman run $container_run_opts $container_common_opts"
    container_redis_cmd="podman run $container_redis_opts $container_common_opts"
    if [ "$CRUCIBLE_USE_CONTAINERS" == "1" -a -z "$CRUCIBLE_CONTAINER_IMAGE" ]; then
        echo "Switching to not using container because CRUCIBLE_CONTAINER_IMAGE is not defined"
        CRUCIBLE_USE_CONTAINERS="0"
    fi
    mkdir -p "$base_run_dir"
    benchmark_subproj_dir="${CRUCIBLE_HOME}"/subprojects/benchmarks/$benchmark
    rs_dir="${CRUCIBLE_HOME}"/subprojects/core/rickshaw
    if [ ! -e bench-params.json ]; then
        echo "Make sure you have defined the benchmark parameters and put in a file \"bench-params.json\""
        echo "You can generate these parameters with \"crucible gen-iterations <benchmark> <options>"
        echo "Here are some examples:"
        echo "crucible gen-iterations fio --defaults basic"
        echo "crucible gen-iterations fio --defaults basic --rw randread,randwrite --bs 4k,64k"
        echo ""
        echo "Once you have run this, you should have a file, \"bench-params.json\" in your current directory"
        exit 1
    fi

    if [ ! -e tool-params.json ]; then
        echo "You do not have a \"tool-params.json\" in the current directory.  Crucible will use"
        echo "the default tools found in $rs_dir/config/tool-params.json.  If you wish to use"
        echo "different tools, create a tool-params.json which adheres to this schema: $rs_dir/schema/tools/json"
        tool_params_file="$rs_dir/config/tool-params.json"
    else
        tool_params_file=tool-params.json
    fi

    if [ ! -e "$benchmark_subproj_dir" ]; then
        echo "Running benchmark $benchmark requires that subproject"
        echo "located in "${CRUCIBLE_HOME}"/subprojects/bench/$benchmark"
        echo "This directory could not be found.  Here are the benchmark"
        echo "subproject directories:"
        /bin/ls "${CRUCIBLE_HOME}"/subprojects/bench/$benchmark
        exit 1
    fi
    redis_cmd="/usr/bin/redis-server /etc/redis.conf"
    run_cmd="${CRUCIBLE_HOME}/subprojects/core/rickshaw/rickshaw-run\
      --tool-params $tool_params_file\
      --bench-params bench-params.json\
      --bench-dir $benchmark_subproj_dir\
      --roadblock-dir=${CRUCIBLE_HOME}/subprojects/core/roadblock\
      --workshop-dir=${CRUCIBLE_HOME}/subprojects/core/workshop\
      --tools-dir=${CRUCIBLE_HOME}/subprojects/tools\
      --base-run-dir=$base_run_dir\
      $@"
    pp_cmd="${CRUCIBLE_HOME}/subprojects/core/rickshaw/rickshaw-post-process\
      --base-run-dir=$base_run_dir"
    if [ "$CRUCIBLE_USE_CONTAINERS" == "1" ]; then
        redis_cmd="$container_redis_cmd $redis_cmd"
        run_cmd="$container_run_cmd $run_cmd"
        pp_cmd="$container_run_cmd $pp_cmd"
        echo "Checking for Redis"
        if podman ps | grep -q crucible-redis; then
            echo "...appears to be running"
        else
            echo "...not present, starting a container for it:"
            $redis_cmd
	    firewall-cmd --zone=public --add-port=6379/tcp
        fi
    fi
    $run_cmd
    RET_VAL=$?
    if [ $RET_VAL -eq 0 ]; then
        $pp_cmd
        RET_VAL=$?
    fi
elif [ "${1}" == "wrapper" ]; then
    shift
    $@
    RET_VAL=$?
else
    echo "This function has not been implemented"
fi

exit ${RET_VAL}

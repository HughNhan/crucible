#!/usr/bin/env bash
# vim: autoindent tabstop=4 shiftwidth=4 expandtab softtabstop=4 filetype=bash
# <Need emacs setup here>

# Crucible's purpose is to provide a single interface
# for all of these subprojects for a seamless performance
# benchmark and tool harness solution

# Crucible expects to have these subprojects (eventually):
#
# Project-name      Commands        Purpose                   Status
#
# Rickshaw          run-benchmark   Coordinate a full "run"   Not implemented
#                   clear-result    of a benchmark with one
#                                   or more iterations
#
# Multiplex         gen-iterations  Convert a user's list     Minimally viable,
#                                   of benchamrk params       Integrated
#                                   (--opt val1,val2)
#                                   into multiple benchmark
#                                   iterations
#
# <remote-exec>     auth-hosts      Automated ssh key         Not implemented
#                   ssh-hosts       installation, multi-
#                                   remote-host execution
#
# Roadblock         <TBD>           Provide synchrnization    Minimally viable,
#                                   across endpoints (hosts   Not integrated
#                                   and/or containers) and
#                                   this controller
#
# Workshop          <TBD>           Image management for      Under Development
#                                   endpoint execution
#
# <tools-project>   register-tool   Integrate various tools   Not implemented
#                   unregister-tool for execution
#
# <elastic/CDM>     query-elastic   Data storage, query,      Under developoment
#                   import-elastic  reporting, etc.
#                   build-elastic
#
#
# Addtionally, Crucible will work with one or more
# benchmark or tool subprojects, found in:
# ./subprojects/tools
# ./subprojects/benchmarks
# 
# These subprojects provide configuration information,
# integration scripts, and post-processing scripts
# for a specific benchmark or tool, like Fio or Iostat.

# Crucible is meant to be run from a single command, 'crucible'
# and provide all the functionality from these projects.

if [ -z "$CRUCIBLE_HOME" ]; then
    if [ -e /etc/sysconfig/crucible ]; then
        . /etc/sysconfig/crucible
        if [ -z "$CRUCIBLE_HOME" ]; then
            echo "\$CRUCIBLE_HOME does not appear to be defined in /etc/sysconfig/crucible, exiting"
            exit 1
        else
            export CRUCIBLE_HOME=$CRUCIBLE_HOME
        fi
    else
        echo "Could not find /etc/sysconfig/crucible.  Please ensure crucible is installed first."
        exit 1
    fi
fi

if [ ! -e $CRUCIBLE_HOME ]; then
    echo "Could not find $CRUCIBLE_HOME, exiting."
    exit 1
fi

function help() {
    echo "Usage:"
    echo "  crucible <command> [command-specific-options]"
    echo ""
    echo "The following commands are supported"
    echo ""
    echo "help            |  Show this help message"
    echo "update          |  Update the repositories that comprise crucible"
    echo "gen-iterations  |  Show the iterations generated for a benchmark"
    echo ""
    echo "For more detailed help for each command, try:"
    echo "  crucible help <command>"
    echo ""
}

if [ "$1" == "help" ]; then
    shift
    if [ -z "$1" ]; then
        help
        exit
    elif [ "$1" == "update" ]; then
	$CRUCIBLE_HOME/bin/update help
	exit
    elif [ "$1" == "gen-iterations" ]; then
        shift
        if [ -z "$1" ]; then
            test -e $CRUCIBLE_HOME/subprojects/core/multiplex/print_help && \
            $CRUCIBLE_HOME/subprojects/core/multiplex/print_help || \
            echo "No help found"
        else
            test -e $CRUCIBLE_HOME/subprojects/benchmarks/$1/print_help && \
            $CRUCIBLE_HOME/subprojects/benchmarks/$1/print_help || \
            echo "No help found"
        fi
    fi
elif [ "$1" == "update" ]; then
    shift
    if [ -z "$1" ]; then
	$CRUCIBLE_HOME/bin/update all
    else
	$CRUCIBLE_HOME/bin/update $1
    fi
elif [ "$1" == "gen-iterations" ]; then
    shift
    benchmark=$1
    shift
    "$CRUCIBLE_HOME"/subprojects/core/multiplex/multiplex \
        "$CRUCIBLE_HOME/subprojects/benchmarks/$benchmark/params.json" "$@"
else
    echo "This function has not been implemented"
fi
